{"version":3,"sources":["./src/app/demo/dashboard/add-new-admin/add-new-admin.component.html","./src/app/demo/dashboard/roles/roles.component.html","./src/app/demo/dashboard/add-new-admin/Add-New-Admin-Service.ts","./src/app/demo/dashboard/add-new-admin/add-new-admin-routing.module.ts","./src/app/demo/dashboard/add-new-admin/add-new-admin.component.scss","./src/app/demo/dashboard/add-new-admin/add-new-admin.component.ts","./src/app/demo/dashboard/add-new-admin/add-new-admin.module.ts","./src/app/demo/dashboard/roles/RoleService.ts","./src/app/demo/dashboard/roles/roles.component.scss","./src/app/demo/dashboard/roles/roles.component.ts","./src/app/demo/dashboard/roles/roles.module.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["export default \"<div *ngIf=\\\"!adminGotTheRole\\\" class=\\\"col-sm-12\\\">\\r\\n    <app-alert type=\\\"danger\\\" dismiss=\\\"true\\\" class=\\\"alert\\\">\\r\\n        <h3>Vous ne poss√©de pas la permission d'ajouter un administrateur!<br>\\r\\n            Veuillez contacter votre administrateur pour cette permission</h3>\\r\\n    </app-alert>\\r\\n</div>\\r\\n<app-alert type=\\\"{{type}}\\\" dismiss=\\\"true\\\" class=\\\"alert\\\" id=\\\"alert\\\" hidden>{{alertText}}</app-alert>\\r\\n<div *ngIf=\\\"adminGotTheRole\\\" class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <app-card [options]=\\\"false\\\" cardTitle=\\\"Information de l'administrateur\\\">\\r\\n            <form autocomplete=\\\"off\\\" [formGroup]=\\\"AddForm\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-3 \\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"exampleInputEmail1\\\">Adresse Email</label>\\r\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" required\\r\\n                                [readonly]=\\\"isSubmitted\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-3 \\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label style=\\\"font: bold;\\\">Pr√©nom</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"prenom\\\" required\\r\\n                                [readonly]=\\\"isSubmitted\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-3\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"exampleInputNom1\\\">Nom</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"nom\\\" required\\r\\n                                [readonly]=\\\"isSubmitted\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-3 \\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"exampleInputNumTel1\\\">Num√©ro T√©l√©phone</label>\\r\\n                            <input type=\\\"tel\\\" class=\\\"form-control\\\" formControlName=\\\"phoneNumber\\\" required\\r\\n                                [readonly]=\\\"isSubmitted\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n\\r\\n        </app-card>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n        <div *ngIf=\\\"adminCanSeeRoles\\\">\\r\\n            <app-roles></app-roles>\\r\\n        </div>\\r\\n\\r\\n        <button class=\\\"btn btn-primary\\\" style=\\\"margin-right: 5px;\\\" (click)=\\\"addAdmin()\\\" type=\\\"button\\\"\\r\\n            [disabled]=\\\"isSubmitted\\\">Ajouter Administrateur</button>\\r\\n        <button class=\\\"btn btn-secondary\\\" [disabled]=\\\"isSubmitted\\\" (click)=\\\"resetPage()\\\">R√©initialiser la page</button>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div class=\\\"col-sm-12\\\" *ngIf=\\\"!adminCanSeeRoles\\\">\\r\\n        <app-alert type=\\\"danger\\\" dismiss=\\\"true\\\">\\r\\n            <h3>Vous ne poss√©de pas la permission d'affecter les r√¥les au administrateur!<br>\\r\\n                Vous pouvez que ajouter des administrateurs sans leurs r√¥les<br>\\r\\n                Veuillez contacter votre administrateur pour cette permission<br>\\r\\n\\r\\n            </h3>\\r\\n        </app-alert>\\r\\n    </div> -->\\r\\n</div>\"","export default \"<div>\\r\\n    <app-card [options]=\\\"false\\\" cardClass=\\\"tab-card\\\" cardTitle=\\\"R√¥les\\\">\\r\\n        <div class=\\\"mb-4\\\" *ngIf=\\\"!isLoaded\\\">\\r\\n            <ngb-progressbar [value]=\\\"100\\\" [striped]=\\\"true\\\" [animated]=\\\"true\\\"></ngb-progressbar>\\r\\n        </div>\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\" *ngFor=\\\"let roleGroup of rolesGroupKeys;let roleGroupIndex=index;\\\"\\r\\n                    title=\\\"{{roleGroup}}\\\" id=\\\"{{roleGroup}}\\\">\\r\\n                    <app-card cardTitle=\\\"{{roleGroup}}\\\" [options]=\\\"false\\\">\\r\\n                        <div *ngFor=\\\"let roles of rolesGroupe[roleGroupIndex];let rolesIndex=index;\\\">\\r\\n                            <div class=\\\"custom-control custom-switch mb-3\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"{{roles[1]}}\\\"\\r\\n                                    (change)=\\\"roleClick(roleGroupIndex,rolesIndex)\\\"\\r\\n                                    [checked]=\\\"roleCheck(roleGroupIndex, rolesIndex)\\\" [disabled]=\\\"isSubmitted\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"{{roles[1]}}\\\">\\r\\n                                    {{roles[0]}}</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </app-card>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </app-card>\\r\\n</div>\"","import { URLS } from 'src/Constants/Constants';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Role } from 'src/Models/Role';\r\nimport { Administrateur } from 'src/Models/Administrateur';\r\nimport { Service } from 'src/Services/Service';\r\n\r\n\r\nexport class AddNewAdminService {\r\n\r\n    \r\n    static async createNewAdmin(http: HttpClient, AddForm: FormGroup, roles: Role[]) {\r\n        let options = await Service.getHeadersWithIdToken();\r\n        let email: string = AddForm.value.email;\r\n        let password: string = this.generatePassword();\r\n        let admin: Administrateur = {\r\n            nom: AddForm.value.nom,\r\n            prenom: AddForm.value.prenom,\r\n            phoneNumber: AddForm.value.phoneNumber,\r\n        }\r\n        let result = await http.post(URLS.createNewAdmin, {\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"roles\": roles,\r\n            \"admin\": admin,\r\n        }, options).toPromise()\r\n        return result\r\n    }\r\n\r\n    private static generatePassword() {\r\n        const allowedCharacters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n        const charactersLength = allowedCharacters.length;\r\n        const length = 15;\r\n        let password = \"\"\r\n        for (let i = 0; i < length; i++) {\r\n            let charPos = Math.floor(Math.random() * charactersLength);\r\n            password += allowedCharacters.charAt(charPos);\r\n        }\r\n        return password\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {AddNewAdminComponent} from './add-new-admin.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddNewAdminComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddNewAdminRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vZGFzaGJvYXJkL2FkZC1uZXctYWRtaW4vYWRkLW5ldy1hZG1pbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { RolesGroupe } from 'src/Models/RolesGroupe';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Administrateur } from 'src/Models/Administrateur';\r\nimport { Constants, RolesId } from 'src/Constants/Constants';\r\nimport { AddNewAdminService } from './Add-New-Admin-Service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Role } from 'src/Models/Role';\r\nimport { RoleService } from '../roles/RoleService';\r\n\r\n@Component({\r\n  selector: 'app-add-new-admin',\r\n  templateUrl: './add-new-admin.component.html',\r\n  styleUrls: ['./add-new-admin.component.scss']\r\n})\r\nexport class AddNewAdminComponent implements OnInit {\r\n  type = \"\";\r\n  alertText = \"\";\r\n  adminToAdd: Administrateur;\r\n  adminRoles: Role[] = []\r\n  AddForm: FormGroup;\r\n  isSubmitted = false;\r\n\r\n  adminGotTheRole = false\r\n  adminCanSeeRoles = false;\r\n  constructor(\r\n    private AUTH: AngularFireAuth,\r\n    private formBuilder: FormBuilder,\r\n    private http?: HttpClient,\r\n  ) {\r\n    if (Constants.admin.rolesGroupe.indexOf(RolesId.add_admin) !== -1) {\r\n      this.adminGotTheRole = true\r\n      if (Constants.admin.rolesGroupe.indexOf(RolesId.Affect_Role_To_Admin) !== -1) {\r\n        this.adminCanSeeRoles = true\r\n      }\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    this.AddForm = this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      nom: ['', Validators.required],\r\n      prenom: ['', Validators.required],\r\n      phoneNumber: ['', Validators.required]\r\n    });\r\n\r\n    RoleService.get().subscribe(item => {\r\n      if (item.adminRoles) {\r\n        this.adminRoles = item.adminRoles;\r\n      }\r\n    })\r\n  }\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n\r\n  async addAdmin() {\r\n    Constants.redirect = false;\r\n    if (!this.AddForm.invalid) {\r\n      let email = <string>this.AddForm.value.email;\r\n      const regex = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\r\n      if (email.match(regex)) {\r\n        this.isSubmitted = true;\r\n        this.showAlert(\"info\", \"Ajout de l'administrateur . . .\");\r\n        let result = await AddNewAdminService.createNewAdmin(this.http, this.AddForm, this.adminRoles);\r\n        //@ts-ignore\r\n        if (result.status) {\r\n          this.AUTH.auth.sendPasswordResetEmail(email);\r\n          this.showAlert(\"success\", \"Administrateur ajout√©!\");\r\n          this.resetPage();\r\n        } else {\r\n          //@ts-ignore\r\n          this.showAlert(\"danger\", \"Administrateur n'est pas ajout√©\");\r\n        }\r\n        this.isSubmitted = false;\r\n      } else {\r\n        this.showAlert(\"danger\", \"Le format de l'e-mail est incorrect\")\r\n      }\r\n    } else {\r\n      this.showAlert(\"danger\", \"Certains champs sont vides\")\r\n    }\r\n  }\r\n\r\n\r\n  showAlert(type: string, text: string) {\r\n    this.type = type;\r\n    this.alertText = text;\r\n    if ((<HTMLInputElement>document.getElementById(\"alert\")))\r\n      (<HTMLInputElement>document.getElementById(\"alert\")).hidden = false;\r\n  }\r\n\r\n\r\n  resetPage() {\r\n    this.AddForm.reset();\r\n    this.isSubmitted = false;\r\n    RoleService.resetPage();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddNewAdminRoutingModule } from './add-new-admin-routing.module';\r\nimport { AddNewAdminComponent } from './add-new-admin.component';\r\nimport {SharedModule} from '../../../theme/shared/shared.module';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {NgbPopoverModule, NgbProgressbarModule, NgbTabsetModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { StorageServiceModule } from 'angular-webstorage-service';\r\nimport { RolesModule } from '../roles/roles.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AddNewAdminRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbProgressbarModule,\r\n    NgbPopoverModule,\r\n    NgbTabsetModule,\r\n    HttpClientModule,\r\n    StorageServiceModule,\r\n    HttpClientModule,    \r\n    RolesModule,\r\n  ],\r\n  declarations: [\r\n    AddNewAdminComponent,\r\n  ],\r\n  providers : [\r\n    HttpClient\r\n  ]\r\n})\r\nexport class AddNewAdminModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Service } from 'src/Services/Service';\r\nimport { URLS } from 'src/Constants/Constants';\r\nimport { Component, Injectable, Input, Output, EventEmitter } from '@angular/core'\r\nimport { Role } from 'src/Models/Role';\r\nimport { Administrateur } from 'src/Models/Administrateur';\r\n@Injectable()\r\nexport class RoleService {\r\n    @Output() static fire: EventEmitter<any> = new EventEmitter();\r\n    static async getAllRoles(http: HttpClient) {\r\n        let options = await Service.getHeadersWithIdToken();\r\n        let result: any = (await http.get(URLS.getAllRoles, options).toPromise())\r\n        return result.status ? result.roles : []\r\n    }\r\n\r\n    static setAdminRoles(adminRoles: Role[]) {\r\n        this.fire.emit({ \"setAdminRoles\": true, adminRoles })\r\n    }\r\n\r\n    static get() {\r\n        return this.fire\r\n    }\r\n\r\n    static resetPage() {\r\n        this.fire.emit({ \"resetPage\": true })\r\n    }\r\n\r\n    static initializeRole(admin: Administrateur) {\r\n        this.fire.emit({ \"initRoles\": true, admin })\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vZGFzaGJvYXJkL3JvbGVzL3JvbGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { RoleService } from './RoleService';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Role } from 'src/Models/Role';\r\nimport { Administrateur } from 'src/Models/Administrateur';\r\n\r\n@Component({\r\n  selector: 'app-roles',\r\n  templateUrl: './roles.component.html',\r\n  styleUrls: ['./roles.component.scss']\r\n})\r\nexport class RolesComponent implements OnInit {\r\n  isLoaded = false;\r\n  rolesGroupKeys = [];\r\n  rolesGroupe: any[][] = [[], [], [], []];\r\n  roleGroupChecked: any[][] = [[], [], [], []];\r\n  adminRoles: Role[] = [];\r\n  snapshotRoles\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.snapshotRoles = await RoleService.getAllRoles(this.http);\r\n    this.initRoles();\r\n    RoleService.get().subscribe(item => {\r\n      if (item.resetPage) {\r\n        this.resetPage()\r\n      } else if (item.initRoles) {\r\n        let admin = item.admin;\r\n        this.initRoles(admin)\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  initRoles(admin?: Administrateur) {\r\n    this.adminRoles = [];\r\n    this.roleGroupChecked = [[], [], [], []];\r\n    this.rolesGroupe = [[], [], [], []]\r\n\r\n    let allgroupedRoles = this.snapshotRoles;\r\n    let groupedRoles = Object.values(allgroupedRoles);\r\n    for (let i = 0; i < groupedRoles.length; i++) {\r\n      let groupe: any = groupedRoles[i]\r\n      const des = groupe.description\r\n      if (this.rolesGroupKeys.length < 4)\r\n        this.rolesGroupKeys.push(des);\r\n      delete groupe.description\r\n      let roles = Object.values(groupe)\r\n      for (let j = 0; j < roles.length; j++) {\r\n        this.rolesGroupe[i][j] = Object.values(roles[j])\r\n        if (admin && admin.rolesGroupe) {\r\n          this.roleGroupChecked[i][j] = (admin.rolesGroupe.indexOf(this.rolesGroupe[i][j][1]) >= 0)\r\n          if (this.roleGroupChecked[i][j]) {\r\n            this.adminRoles.push(this.rolesGroupe[i][j][1])\r\n          }\r\n        } else {\r\n          this.roleGroupChecked[i][j] = false\r\n        }\r\n      }\r\n    }\r\n    this.isLoaded = true;\r\n  }\r\n\r\n  roleCheck(roleGroupIndex, rolesIndex): boolean {\r\n    return this.roleGroupChecked[roleGroupIndex][rolesIndex];\r\n  }\r\n\r\n  roleClick(roleGroupIndex, rolesIndex) {\r\n    this.roleGroupChecked[roleGroupIndex][rolesIndex] = !this.roleGroupChecked[roleGroupIndex][rolesIndex];\r\n    if (this.roleGroupChecked[roleGroupIndex][rolesIndex]) {\r\n      this.adminRoles.push(this.rolesGroupe[roleGroupIndex][rolesIndex][1]);\r\n    } else {\r\n      let index = this.adminRoles.indexOf(this.rolesGroupe[roleGroupIndex][rolesIndex][1]);\r\n      this.adminRoles.splice(index, 1)\r\n    }\r\n    RoleService.setAdminRoles(this.adminRoles);\r\n  }\r\n\r\n  resetPage() {\r\n    this.roleGroupChecked = [[], [], [], []];\r\n    this.adminRoles = []\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RolesComponent } from './roles.component';\r\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbProgressbarModule, NgbPopoverModule, NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [RolesComponent],\r\n  imports: [\r\n    CommonModule,\r\n\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbProgressbarModule,\r\n    NgbPopoverModule,\r\n    NgbTabsetModule,\r\n    HttpClientModule,\r\n  ],\r\n  exports: [\r\n    RolesComponent\r\n  ]\r\n})\r\nexport class RolesModule { }\r\n"],"sourceRoot":"webpack:///"}